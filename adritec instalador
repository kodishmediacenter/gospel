#plagio total pois muitas coisas eh parecido mas eh uma copia

import shutil

import urllib2,urllib

import re

import extract

import time

import downloader

import plugintools

import zipfile

import ntpath

import ssl

import traceback,sys

from libs import kodi

from libs import viewsetter



icon = os.path.join(xbmc.translatePath("special://home/addons/adritecnews.repo.kodi/icon.png").decode("utf-8"))



if kodi.get_kversion() >16.5:

	#kodi.log(' VERSION IS ABOVE 16.5')

	ssl._create_default_https_context = ssl._create_unverified_context

else:

	#kodi.log(' VERSION IS BELOW 16.5')

	pass

from libs import addon_able



USER_AGENT = 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.9.0.3) Gecko/2008092417 Firefox/3.0.3'

base='adritecnews.repo.kodi'

ADDON=xbmcaddon.Addon(id='adritecnews.repo.kodi')    

VERSION = "1.0"

PATH = "adritecnews"            



    

def ADR():

    link = OPEN_URL('https://pastebin.com/raw/UvwHJUTB').replace('\n','').replace('\r','')

    match = re.compile('name="(.+?)".+?rl="(.+?)".+?mg="(.+?)".+?anart="(.+?)".+?escription="(.+?)"').findall(link)

    for name,url,iconimage,fanart,description in match:

        addDir(name,url,1,iconimage,fanart,description)

    setView('movies', 'MAIN')

	

def HORAS():

    link = OPEN_URL('https://pastebin.com/raw/zvtcEQTW').replace('\n','').replace('\r','')

    match = re.compile('name="(.+?)".+?rl="(.+?)".+?mg="(.+?)".+?anart="(.+?)".+?escription="(.+?)"').findall(link)

    for name,url,iconimage,fanart,description in match:

        addDir(name,url,1,iconimage,fanart,description)

    setView('movies', 'MAIN')		

	

def PROGRAMAS():

    link = OPEN_URL('https://pastebin.com/raw/FHpJvK1a').replace('\n','').replace('\r','')

    match = re.compile('name="(.+?)".+?rl="(.+?)".+?mg="(.+?)".+?anart="(.+?)".+?escription="(.+?)"').findall(link)

    for name,url,iconimage,fanart,description in match:

        addDir(name,url,1,iconimage,fanart,description)

    setView('movies', 'MAIN')

	

def SETUP_REPO():

        

        xbmc.executebuiltin("ActivateWindow(10040,&quot;addons://install/&quot;,return)")



def SETUP_ADDONS():

        

        xbmc.executebuiltin("ActivateWindow(addons://sources/video/addons)")



def menu_adritecnews():

        addDir("adritecnews","101",101,icon,"","")

        mode = '101'

def login():

       	

        dialog = xbmcgui.Dialog()

        ok = dialog.ok('[COLOR dodgerblue][B]SEJA[/B][/COLOR][COLOR red][B] BEM [/B][/COLOR][COLOR white][B]VINDO[/B][/COLOR]','[COLOR yellow][B]Instalador de addon(s): [/B][/COLOR]''[COLOR dodgerblue][B] adritec[/B][/COLOR][COLOR red][B]News[/B][/COLOR]','[COLOR yellow][B]Nao tenho responsabilidades pelos addon(s)![/B][/COLOR][COLOR white][B] [/B][/COLOR]','[COLOR red][B]OBS:[/B][/COLOR][COLOR white][B] PROIBIDO modificar e divulgar![/B][/COLOR]')

				

        dialog = xbmcgui.Dialog()		

        dialog.notification('[COLOR gold][B]INSCREVA-SE NO CANAL[/B][/COLOR]','[COLOR dodgerblue][B]adritec[/B][/COLOR][COLOR red][B]News[/B][/COLOR]', icon, 4000)

						

        d = dialog.input('[COLOR dodgerblue][B]adritec[/B][/COLOR][COLOR red][B]News[/B]:[/COLOR] [COLOR dodgerblue][B]1[/B][/COLOR][COLOR white]|[COLOR yellow]24hrs: [/COLOR][COLOR dodgerblue][B]2[/B][/COLOR][COLOR white]|[COLOR yellow]Programas: [/COLOR][COLOR dodgerblue][B]3[/B][/COLOR][COLOR white]|[COLOR yellow]Ativar [/COLOR][COLOR white]addon(s): [/COLOR][COLOR red][B]4[/B][/COLOR]', type=xbmcgui.INPUT_ALPHANUM)

        key = int(""+d+"")	

		

                  

        if key == 4:

            SETUP_REPO()        

				        

        if key == 1:

            ADR()

            				            

        if key == 3:

            PROGRAMAS()

			

        if key == 2:

            HORAS()          

        		       

    

def OPEN_URL(url):

    req = urllib2.Request(url)

    req.add_header('User-Agent', 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.9.0.3) Gecko/2008092417 Firefox/3.0.3')

    response = urllib2.urlopen(req)

    link=response.read()

    response.close()

    return link

    

    

def wizard(name,url,description):

    path = xbmc.translatePath(os.path.join('special://home/addons','packages'))

    dp = xbmcgui.DialogProgress()

    dp.create("[COLOR dodgerblue][B]adritec[/B][/COLOR][COLOR red][B]News[/B][/COLOR][COLOR white]:[/COLOR] Addon Selecionado","[B]Baixando o addon[/B].. ",'Aguarde pelo processo!', '')

    lib=os.path.join(path, name+'.zip')

    try:

       os.remove(lib)

    except:

       pass   

	   

    downloader.download(url, lib, dp)

    addonfolder = xbmc.translatePath(os.path.join('special://','home/','addons'))

    time.sleep(2)

    dp.update(0,"[B]Instalando[/B]..", "Aguarde fechar o instalador!")

    print '======================================='

    print addonfolder

    print '======================================='

    extract.all(lib,addonfolder,dp)

    #dialog = xbmcgui.Dialog()

    #dialog.ok("Baixado com Sucesso:)", 'Para continuar a Instalacao ira ser solicitado que desligue o Kodi', 'Se for uma Box precione [COLOR yellow]NAO[/COLOR] depois sai do kodi para terminar a instalacao.','[COLOR yellow][B][Kodi 17][/B][/COLOR]Ao Voltar vai Addons em Meus Addons ativa o addons instalado')

    

    xbmc.executebuiltin("XBMC.UpdateLocalAddons()");

    addon_able.set_enabled("")

    addon_able.setall_enable()                

    dialog = xbmcgui.Dialog()     

    dialog.ok('[COLOR dodgerblue][B]adritec[/B][/COLOR][COLOR red][B]News[/B][/COLOR]: Atencao','[B]Caso o(s) addon(s) Nao ative na instalacao![/B]','[B]Ative-o manualmente, indo na Tela Principal.[/B]','[COLOR yellow][B]DIGITE O[/B][/COLOR] [COLOR white][B]NUMERO[/B][/COLOR]: [COLOR red][B]4[/B][/COLOR]')

    



def addDir(name,url,mode,iconimage,fanart,description):

        u=sys.argv[0]+"?url="+urllib.quote_plus(url)+"&mode="+str(mode)+"&name="+urllib.quote_plus(name)+"&iconimage="+urllib.quote_plus(iconimage)+"&fanart="+urllib.quote_plus(fanart)+"&description="+urllib.quote_plus(description)

        ok=True

        liz=xbmcgui.ListItem(name, iconImage="DefaultFolder.png", thumbnailImage=iconimage)

        liz.setInfo( type="Video", infoLabels={ "Title": name, "Plot": description } )

        liz.setProperty( "Fanart_Image", fanart )

        ok=xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]),url=u,listitem=liz,isFolder=False)

        return ok

               

        

def get_params():

        param=[]

        paramstring=sys.argv[2]

        if len(paramstring)>=2:

                params=sys.argv[2]

                cleanedparams=params.replace('?','')

                if (params[len(params)-1]=='/'):

                        params=params[0:len(params)-2]

                pairsofparams=cleanedparams.split('&')

                param={}

                for i in range(len(pairsofparams)):

                        splitparams={}

                        splitparams=pairsofparams[i].split('=')

                        if (len(splitparams))==2:

                                param[splitparams[0]]=splitparams[1]

                                

        return param

        

                      

params=get_params()

url=None

name=None

mode=None

iconimage=None

fanart=None

description=None





try:

        url=urllib.unquote_plus(params["url"])

except:

        pass

try:

        name=urllib.unquote_plus(params["name"])

except:

        pass

try:

        iconimage=urllib.unquote_plus(params["iconimage"])

except:

        pass

try:        

        mode=int(params["mode"])

except:

        pass

try:        

        fanart=urllib.unquote_plus(params["fanart"])

except:

        pass

try:        

        description=urllib.unquote_plus(params["description"])

except:

        pass

        

        

print str(PATH)+': '+str(VERSION)

print "Mode: "+str(mode)

print "URL: "+str(url)

print "Name: "+str(name)

print "IconImage: "+str(iconimage)





def setView(content, viewType):

    # set content type so library shows more views and info

    if content:

        xbmcplugin.setContent(int(sys.argv[1]), content)

    if ADDON.getSetting('auto-view')=='true':

        xbmc.executebuiltin("Container.SetViewMode(%s)" % ADDON.getSetting(viewType) )



if mode==None or url==None or len(url)<1:

        login()        

      

elif mode==1:

        wizard(name,url,description)

        

elif mode==101:

        ADR()

		#HORAS()

        #PROGRAMAS()        

		

xbmcplugin.endOfDirectory(int(sys.argv[1]))

        

xbmcplugin.endOfDirectory(int(sys.argv[1]))




>>> 
